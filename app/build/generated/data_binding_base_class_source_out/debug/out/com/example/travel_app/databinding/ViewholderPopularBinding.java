// Generated by view binder compiler. Do not edit!
package com.example.travel_app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.travel_app.R;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ViewholderPopularBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView addressTxt;

  @NonNull
  public final ImageView imageView5;

  @NonNull
  public final ImageView imageView6;

  @NonNull
  public final ShapeableImageView pic;

  @NonNull
  public final TextView priceTxt;

  @NonNull
  public final TextView scoreTxt;

  @NonNull
  public final TextView textView8;

  @NonNull
  public final TextView titleTxt;

  private ViewholderPopularBinding(@NonNull ConstraintLayout rootView, @NonNull TextView addressTxt,
      @NonNull ImageView imageView5, @NonNull ImageView imageView6, @NonNull ShapeableImageView pic,
      @NonNull TextView priceTxt, @NonNull TextView scoreTxt, @NonNull TextView textView8,
      @NonNull TextView titleTxt) {
    this.rootView = rootView;
    this.addressTxt = addressTxt;
    this.imageView5 = imageView5;
    this.imageView6 = imageView6;
    this.pic = pic;
    this.priceTxt = priceTxt;
    this.scoreTxt = scoreTxt;
    this.textView8 = textView8;
    this.titleTxt = titleTxt;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ViewholderPopularBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ViewholderPopularBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.viewholder_popular, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ViewholderPopularBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addressTxt;
      TextView addressTxt = ViewBindings.findChildViewById(rootView, id);
      if (addressTxt == null) {
        break missingId;
      }

      id = R.id.imageView5;
      ImageView imageView5 = ViewBindings.findChildViewById(rootView, id);
      if (imageView5 == null) {
        break missingId;
      }

      id = R.id.imageView6;
      ImageView imageView6 = ViewBindings.findChildViewById(rootView, id);
      if (imageView6 == null) {
        break missingId;
      }

      id = R.id.pic;
      ShapeableImageView pic = ViewBindings.findChildViewById(rootView, id);
      if (pic == null) {
        break missingId;
      }

      id = R.id.priceTxt;
      TextView priceTxt = ViewBindings.findChildViewById(rootView, id);
      if (priceTxt == null) {
        break missingId;
      }

      id = R.id.scoreTxt;
      TextView scoreTxt = ViewBindings.findChildViewById(rootView, id);
      if (scoreTxt == null) {
        break missingId;
      }

      id = R.id.textView8;
      TextView textView8 = ViewBindings.findChildViewById(rootView, id);
      if (textView8 == null) {
        break missingId;
      }

      id = R.id.titleTxt;
      TextView titleTxt = ViewBindings.findChildViewById(rootView, id);
      if (titleTxt == null) {
        break missingId;
      }

      return new ViewholderPopularBinding((ConstraintLayout) rootView, addressTxt, imageView5,
          imageView6, pic, priceTxt, scoreTxt, textView8, titleTxt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
